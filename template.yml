Transform: 'AWS::Serverless-2016-10-31'
Description: 'Vestibule AWS Stack'
Metadata:
  AWS::ServerlessRepo::Application:
    Name: vestibule
    Description: Vestibule application
    Author: Ray Munian
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE.txt
    ReadmeUrl: README.md
    Labels: ['tests']
    HomePageUrl: https://github.com/rym002/vestibule-aws
    SemanticVersion: 0.0.1
    SourceCodeUrl: https://github.com/rym002/vestibule-aws
Parameters:
  VideoSkillId:
    Description: Alexa Video Skill Id
    Type: AWS::SSM::Parameter::Value<String>
Outputs:
  AlexaGatewayId:
    Description: ID of the AlexaGateway
    Value: !GetAtt AlexaGateway.Arn
Resources:
  AlexaGateway:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: functions/alexa-gateway/
      Handler: dist/index.handler
      Runtime: nodejs12.x
      FunctionName: !Sub ${AWS::StackName}-AlexaGateway
      Description: 'Vestibule Alexa Gateway'
      Timeout: 50
      Role: !Ref AlexaGatewayRole
      Layers:
        - !Ref CommonLayer
        - !Ref AlexaLayer
      Environment:
        Variables:
          refresh_token_table: !Select [1, !Split [ "/", !GetAtt RefreshTokensTable.Arn]]
          auth_token_table: !Select [1, !Split [ "/", !GetAtt AuthTokensTable.Arn]]
          endpoint_table: !Select [1, !Split [ "/", !GetAtt EndpointTable.Arn]]
  AlexaChangeReportEvent:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: functions/alexa-change-report/
      Handler: dist/index.handler
      Runtime: nodejs12.x
      FunctionName: !Sub ${AWS::StackName}-AlexaChangeReportEvent
      Description: 'Vestibule Alexa Event Gateway'
      Timeout: 50
      Role: !Ref AlexaChangeEventRole
      Layers:
        - !Ref CommonLayer
        - !Ref AlexaLayer
      Environment:
        Variables:
          refresh_token_table: !Select [1, !Split [ "/", !GetAtt RefreshTokensTable.Arn]]
          auth_token_table: !Select [1, !Split [ "/", !GetAtt AuthTokensTable.Arn]]
          endpoint_table: !Select [1, !Split [ "/", !GetAtt EndpointTable.Arn]]
  CommonLayer:
    Type: 'AWS::Serverless::LayerVersion'
    Properties:
      ContentUri: layers/common/layer-dist
      CompatibleRuntimes:
        - nodejs12.x
      Description: Common Code across vestibule functions
      RetentionPolicy: Delete
    Metadata:
      BuildMethod: nodejs12.x
  AlexaLayer:
    Type: 'AWS::Serverless::LayerVersion'
    Properties:
      ContentUri: layers/alexa/layer-dist
      CompatibleRuntimes:
        - nodejs12.x
      Description: Common Code across alexa functions
      RetentionPolicy: Delete
    Metadata:
      BuildMethod: nodejs12.x
  AlexaGatewayInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref AlexaGateway
      Action: lambda:InvokeFunction
      EventSourceToken: !Ref VideoSkillId
      Principal: alexa-connectedhome.amazon.com
  AlexaChangeReportEventInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref AlexaChangeReportEvent
      Action: lambda:InvokeFunction
      SourceArn: !Ref IOTEventChangeReportRule
      Principal: iot.amazonaws.com
  AuthTokensTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: !Sub ${AWS::StackName}-AuthTokens
      AttributeDefinitions:
        -
          AttributeName: user_id
          AttributeType: S
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      KeySchema:
        - 
          AttributeName: user_id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  RefreshTokensTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: !Sub ${AWS::StackName}-RefreshTokens
      AttributeDefinitions:
        -
          AttributeName: user_id
          AttributeType: S
      KeySchema:
        - 
          AttributeName: user_id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  EndpointTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: !Sub ${AWS::StackName}-Endpoint
      AttributeDefinitions:
        -
          AttributeName: user_id
          AttributeType: S
        -
          AttributeName: endpointId
          AttributeType: S
      KeySchema:
        - 
          AttributeName: user_id
          KeyType: HASH
        - 
          AttributeName: endpointId
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  AlexaGatewayRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: AlexaGatewayRole
      Path: !Sub /${AWS::StackName}/
      ManagedPolicyArns:
        - !Ref LambdaDirectivePolicy
        - !Ref LambdaDefaultPolicy
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
  AlexaChangeEventRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: AlexaChangeEventRole
      Path: !Sub /${AWS::StackName}/
      ManagedPolicyArns:
        - !Ref LambdaDefaultPolicy
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
  LambdaDirectivePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Path: !Sub /${AWS::StackName}/
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - dynamodb:Query
            Resource:
              - !Ref EndpointTable
          -
            Effect: Allow
            Action:
              - iot:Connect
            Resource:
              - !Sub arn:aws:iot:${AWS::Region}:${AWS::AccountId}:client/vestibule-gateway-*
          -
            Effect: Allow
            Action:
              - iot:Subscribe
            Resource:
              - !Sub arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topicfilter/$aws/things/vestibule-bridge-*/shadow/name/*/update/accepted
              - !Sub arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topicfilter/vestibule-bridge/vestibule-bridge-*/alexa/event/*
          -
            Effect: Allow
            Action:
              - iot:Receive
            Resource:
              - !Sub arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/vestibule-bridge/vestibule-bridge-*/alexa/event/*
              - !Sub arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/$aws/things/vestibule-bridge-*/shadow/name/*/update/accepted
          -
            Effect: Allow
            Action:
              - iot:Publish
            Resource:
              - !Sub arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/vestibule-bridge/vestibule-bridge-*/alexa/endpoint/*/directive/**
          -
            Effect: Allow
            Action:
              - iot:GetThingShadow
            Resource:
              - !Sub arn:aws:iot:${AWS::Region}:${AWS::AccountId}:thing/vestibule-bridge-*
          -
            Effect: Allow
            Action:
              - iot:UpdateThingShadow
            Resource:
              - !Sub arn:aws:iot:${AWS::Region}:${AWS::AccountId}:thing/vestibule-bridge-*
  LambdaDefaultPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Path: !Sub /${AWS::StackName}/
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - dynamodb:PutItem
              - dynamodb:BatchGetItem
              - dynamodb:GetItem
            Resource:
              - !Ref AuthTokensTable
              - !Ref RefreshTokensTable
          -
            Effect: Allow
            Action:
              - dynamodb:BatchWriteItem
            Resource:
              - !Ref EndpointTable
              - !Ref AuthTokensTable
              - !Ref RefreshTokensTable
          -
            Effect: Allow
            Action: 
              - ssm:GetParameter
              - ssm:GetParametersByPath
            Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/vestibule/dev
          -
            Effect: Allow
            Action: kms:Decrypt
            Resource: !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*
  VestibuleClientPolicy:
    Type: AWS::IoT::Policy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action: iot:Subscribe
            Resource:
              - !Sub arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topicfilter/${!iot:Connection.Thing.ThingTypeName}/${!iot:Connection.Thing.ThingName}/alexa/*/directive/*
              - !Sub arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topicfilter/$aws/things/${!iot:Connection.Thing.ThingName}/shadow/name/*/update/*
              - !Sub arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topicfilter/$aws/things/${!iot:Connection.Thing.ThingName}/shadow/name/*/delete/*
          -
            Effect: Allow
            Action: iot:Receive
            Resource:
              - !Sub arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/${!iot:Connection.Thing.ThingTypeName}/${!iot:Connection.Thing.ThingName}/alexa/*/directive/*
              - !Sub arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/$aws/things/${!iot:Connection.Thing.ThingName}/shadow/name/*/update/*
              - !Sub arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/$aws/things/${!iot:Connection.Thing.ThingName}/shadow/name/*/delete/*
          -
            Effect: Allow
            Action: iot:Publish
            Resource:
              - !Sub arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/${!iot:Connection.Thing.ThingTypeName}/${!iot:Connection.Thing.ThingName}/alexa/event/*
              - !Sub arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/$aws/things/${!iot:Connection.Thing.ThingName}/shadow/name/*/update
              - !Sub arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/$aws/things/${!iot:Connection.Thing.ThingName}/shadow/name/*/delete
              - !Sub arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/${!iot:Connection.Thing.ThingTypeName}/${!iot:Connection.Thing.ThingName}/alexa/endpoint/*/settings
          -
            Effect: Allow
            Action: 
              - iot:UpdateThingShadow
              - iot:DeleteThingShadow
            Resource: !Sub arn:aws:iot:${AWS::Region}:${AWS::AccountId}:thing/${!iot:Connection.Thing.ThingName}/*
          -
            Effect: Allow
            Action: iot:Connect
            Resource: !Sub arn:aws:iot:${AWS::Region}:${AWS::AccountId}:client/${!iot:Connection.Thing.ThingName}
  IOTClientConnectedRule:
    Type: AWS::IoT::TopicRule
    Properties:
      RuleName:
        !Sub
        - ${StackName}_ClientConnected
        - { StackName: !Join ["_", !Split [ "-", !Ref "AWS::StackName"]] }
      TopicRulePayload:
        Actions:
          -
            Republish:
              RoleArn: !Ref VestibuleIotRuleRole
              Topic: $$aws/things/${clientId}/shadow/name/bridge/update
        Description: Update thing shadow connected value
        RuleDisabled: false
        AwsIotSqlVersion: 2016-03-23
        Sql: >-
          select { 
            'state': { 
              'desired':null, 
              'reported':{ 
                'endpoints':null, 
                'connected': 
                  CASE eventType 
                    WHEN 'connected' 
                      THEN true 
                    ELSE false
                  END 
                } 
              } 
            } 
            FROM '$aws/events/presence/+/+' 
            WHERE startswith(clientId,"vestibule-bridge-")
  IOTEndpointUpdateRule:
    Type: AWS::IoT::TopicRule
    Properties:
      RuleName:
        !Sub
        - ${StackName}_EndpointSettingUpdate
        - { StackName: !Join ["_", !Split [ "-", !Ref "AWS::StackName"]] }
      TopicRulePayload:
        Actions:
          -
            DynamoDBv2:
              RoleArn: !Ref VestibuleIotRuleRole
              PutItem: 
                TableName: !Select [1, !Split [ "/", !GetAtt EndpointTable.Arn]]
        Description: Update DynamoDB table with endpoint capabilities and info
        RuleDisabled: false
        AwsIotSqlVersion: 2016-03-23
        Sql: >-
          SELECT substring(topic(2),length('vestibule-bridge-')) as user_id, topic(5) as endpointId, * 
          FROM 'vestibule-bridge/+/alexa/endpoint/+/settings'
  IOTEventChangeReportRule:
    Type: AWS::IoT::TopicRule
    Properties:
      RuleName:
        !Sub
        - ${StackName}_EventChangeReport
        - { StackName: !Join ["_", !Split [ "-", !Ref "AWS::StackName"]] }
      TopicRulePayload:
        Description: Call AlexaChangeReportEvent function to send ChangeReport
        RuleDisabled: false
        Actions:
          -
            Lambda:
              FunctionArn: !Ref AlexaChangeReportEvent
        AwsIotSqlVersion: 2016-03-23
        Sql: >-
          SELECT {
            'userSub':substring(topic(3),length('vestibule-bridge-')),
            'endpointId':topic(6),
            'shadow':*
          }
          FROM '$aws/things/+/shadow/name/+/update/accepted'
  VestibuleIotRuleRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: IotRuleRole
      Path: !Sub /${AWS::StackName}/
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - iot.amazonaws.com
            Action:
              - sts:AssumeRole
  VestibuleIotRulePolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref VestibuleIotRuleRole
      PolicyName: !Sub ${AWS::StackName}-IotRulePolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action: iot:Publish
            Resource: !Sub arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/$aws/things/vestibule-bridge-*/shadow/name/bridge/update
          -
            Effect: Allow
            Action: dynamodb:PutItem
            Resource:
              - !Ref EndpointTable
  AlexaGatewayLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: 
        !Sub
        - /aws/lambda/${FunctionName}
        - { FunctionName: !Select [6, !Split [ ":", !GetAtt AlexaGateway.Arn]] }
      RetentionInDays: 7
  AlexaChangeReportEventLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: 
        !Sub
        - /aws/lambda/${FunctionName}
        - { FunctionName: !Select [6, !Split [ ":", !GetAtt AlexaChangeReportEvent.Arn]] }
      RetentionInDays: 7
